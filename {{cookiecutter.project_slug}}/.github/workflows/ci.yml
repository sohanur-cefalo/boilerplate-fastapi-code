{% if cookiecutter.include_github_actions == "yes" -%}
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_{{cookiecutter.database_name}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    steps:
    - uses: actions/checkout@v4

    - name: Set up Python {{cookiecutter.python_version}}
      uses: actions/setup-python@v4
      with:
        python-version: {{cookiecutter.python_version}}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up environment
      run: |
        cp env.example .env
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_{{cookiecutter.database_name}}" >> .env

    {% if cookiecutter.include_testing == "pytest" -%}
    - name: Run tests with pytest
      run: |
        pytest --cov=app --cov-report=xml --cov-report=html
    {% elif cookiecutter.include_testing == "unittest" -%}
    - name: Run tests with unittest
      run: |
        python -m unittest discover tests
    {% endif -%}

    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    {% if cookiecutter.include_testing == "pytest" -%}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    {% endif -%}

  {% if cookiecutter.include_docker == "yes" -%}
  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t {{cookiecutter.project_slug}}:latest .
    
    - name: Test Docker image
      run: |
        docker run --rm {{cookiecutter.project_slug}}:latest python -c "import app.main; print('Docker image works!')"
  {% endif -%}
{% endif -%}
